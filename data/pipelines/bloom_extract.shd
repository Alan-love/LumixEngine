include "pipelines/common.glsl"

vertex_shader [[
	
	layout (location = 0) out vec2 v_uv;
	
	void main()
	{
		gl_Position = fullscreenQuad(gl_VertexID, v_uv);
	}
]]

fragment_shader [[
	layout (binding=0) uniform sampler2D u_input;
	layout (binding=1) uniform sampler2D u_luma_accum;
	layout (location = 0) in vec2 v_uv;
	layout (location = 0) out vec4 o_color;
	layout(std140, binding = 4) uniform Data {
		float u_luma_limit;
	};

	void main() {
		float avg_lum = exp2(texture(u_luma_accum, v_uv).r);
		vec3 c = texture(u_input, v_uv).rgb;
		o_color = vec4(luminance(c) > avg_lum * u_luma_limit ? max(c /*- vec3(avg_lum * u_luma_limit)*/, vec3(0)) : vec3(0), 1);
	}
]]